name: Push Frontend to GHCR and Deploy to VM

on:
  push:
    branches:
      - master
      - dockerization
  

jobs:
  push-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      PORT: 3000
    
    steps:
      - name: downcase Repo
        run: |
            echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: |
            ghcr.io/future-arc/pharmacyos-fe/master:latest
        env:
          EXT_PORT: ${{vars.PORT}}
          INT_PORT: ${{vars.PORT}}
      - name: Remote docker login to Github docker registry and create/update .env file for docker compose
        uses: fifsky/ssh-action@master
        with:
          command: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            touch ./.env
            echo PORT=${{vars.PORT}} >> ./.env
            echo REPO=${{env.REPO}} >> ./.env
            echo Tag=${{github.sha}} >> ./.env
          host: ${{ secrets.FE_HOST }}
          user: ubuntu
          key: ${{ secrets.FE_HOST_PRIVATE_KEY }}
      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@master
        with:
          remote_docker_host: ubuntu@${{secrets.FE_HOST}}
          ssh_private_key: ${{ secrets.FE_HOST_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.FE_HOST_SERVER_PUBLIC_KEY }}
          stack_file_name: docker-compose-staging.yml
          deployment_mode: docker-compose
          args: --env-file ./.env up -d
          docker_prune: 'true'
          deploy_path: './'
          copy_stack_file: 'true'
          pull_images_first: 'true'
            
       